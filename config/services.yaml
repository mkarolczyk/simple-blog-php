# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app_path_image: '%env(APP_PATH_IMAGE)%'
    app_temp_path_image: '%env(APP_TEMP_PATH_IMAGE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Interfaces
    App\Blog\Application\Repository\BlogPostRepositoryInterface: '@App\Blog\Infrastructure\Doctrine\Repository\DoctrineBlogPostRepository'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
#    App\Controller\:
#        resource: '../src/Controller/'
#        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    command_handlers:
        namespace: App\
        resource: '%kernel.project_dir%/src/*/Application/Command/*Handler.php'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: command.bus }

    event_handlers:
        namespace: App\
        resource: '%kernel.project_dir%/src/*/Application/EventHandler/*Handler.php'
        autoconfigure: false
        tags:
            - { name: messenger.message_handler, bus: event.bus }
